{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.6.18.56646",
      "templateHash": "10806234693722113459"
    }
  },
  "parameters": {
    "vnetName": {
      "type": "string",
      "defaultValue": "k8s-vn",
      "metadata": {
        "description": "VNet for Kubernetes"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address prefix"
      }
    },
    "subnetName": {
        "type": "string",
        "defaultValue": "k8s-sn",
        "metadata": {
            "description": "Name of the subment for kubernetes virtual network"
        }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet 1 Prefix"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "networkSecurityGroupName" : {
      "type": "string",
      "defaultValue": "k8s-nsg",
      "metadata": {
        "description": "Network security group for K8S instances"
      }
    },
     "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
      "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "Ubuntu-2004",
      "allowedValues": [
        "Ubuntu-1804",
        "Ubuntu-2004",
        "Ubuntu-2204"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
      }
    },
     "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "The size of the VM"
      }
    },
    "vmCpName": {
      "type": "string",
      "defaultValue": "k8s-cp-vm",
      "metadata": {
        "description": "The name of the Control plane Virtual Machine."
      }
    },
      "vmDpName": {
      "type": "string",
      "defaultValue": "k8s-dp-vm",
      "metadata": {
        "description": "The name of data plane worker 1 Virtual Machine."
      }
    },
    "dnsCpLabelPrefix": {
			"type": "string",
			"defaultValue": "[toLower(concat('k8s-cp-cluster-', uniqueString(resourceGroup().id)))]",
			"metadata": {
				"description": "Unique DNS Name for the Public IP used to access the control plane Virtual Machine."
			}
		},
		"dnsDpLabelPrefix": {
			"type": "string",
			"defaultValue": "[toLower(concat('k8s-dp-cluster-', uniqueString(resourceGroup().id)))]",
			"metadata": {
				"description": "Unique DNS Name for the Public IP used to access the data plane virtual machine"
			}
		},
    "securityType": {
      "type": "string",
      "defaultValue": "TrustedLaunch",
      "allowedValues": [
        "Standard",
        "TrustedLaunch"
      ],
      "metadata": {
        "description": "Security Type of the Virtual Machine."
      }
    },
    "defaultNodeCount": {
			"type": "int",
			"defaultValue": 2,
			"metadata": {
				"description": "The initial node size of your VMSS cluster."
			}
		},
		"minNodeCount": {
			"type": "int",
			"defaultValue": 1,
			"metadata": {
				"description": "The min node size of your VMSS cluster."
			}
		},
		"maxNodeCount": {
			"type": "int",
			"defaultValue": 2,
			"metadata": {
				"description": "The max node size of your VMSS cluster."
			}
		}
  },
  "variables": {
    "publicIpAddressName" : "[concat(parameters('vmCpName'), '-ip' )]",
    "publicDpIpAddressName" : "[concat(parameters('vmDpName'), '-ip' )]",

     "imageReference": {
      "Ubuntu-1804": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "18_04-lts-gen2",
        "version": "latest"
      },
      "Ubuntu-2004": {
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-focal",
        "sku": "20_04-lts-gen2",
        "version": "latest"
      },
      "Ubuntu-2204": {
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-jammy",
        "sku": "22_04-lts-gen2",
        "version": "latest"
      }
    },
    "osDiskType": "Standard_LRS",
    "networkInterfaceName": "[concat(parameters('vmCpName'),'-ni')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]",
     "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "securityProfileJson": {
      "uefiSettings": {
        "secureBootEnabled": true,
        "vTpmEnabled": true
      },
      "securityType": "[parameters('securityType')]"
    }
  },
  "resources": [
    {
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2020-08-01",
			"name": "[variables('publicIpAddressName')]",
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic",
				"publicIPAddressVersion": "IPv4",
				"dnsSettings": {
					"domainNameLabel": "[parameters('dnsCpLabelPrefix')]"
				},
				"idleTimeoutInMinutes": 10
			}
		},
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-05-01",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "priority": 1000,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          }
        ]
      }
    },
    {
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-08-01",
			"name": "[variables('networkInterfaceName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
				"[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"subnet": {
								"id": "[variables('subnetRef')]"
							},
							"privateIPAllocationMethod": "Dynamic",
							"publicIpAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
							}
						}
					}
				],
        "networkSecurityGroup": {
          "id" : "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
        }
			}
		},
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-08-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[parameters('vmCpName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            }
          },
          "imageReference": "[variables('imageReference')[parameters('ubuntuOSVersion')]]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('vmCpName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
        },
        "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'), variables('securityProfileJson'), json('null'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ]
    },
    {
			"type": "Microsoft.Compute/virtualMachineScaleSets",
			"apiVersion": "2020-12-01",
			"name": "[parameters('vmDpName')]",
			"tags": {
				"cluster-autoscaler-enabled": "true",
				"cluster-autoscaler-name": "[resourceGroup().name]",
				"min": "[parameters('minNodeCount')]",
				"max": "[parameters('maxNodeCount')]",
				"poolName": "[parameters('vmDpName')]"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
			],
			"location": "[parameters('location')]",
			"sku": {
				"name": "[parameters('vmSize')]",
				"tier": "Standard",
				"capacity": "[parameters('defaultNodeCount')]"
			},
			"properties": {
				"overprovision": false,
				"upgradePolicy": {
					"mode": "Manual"
				},
				"virtualMachineProfile": {
					"storageProfile": {
						"osDisk": {
							"createOption": "FromImage",
							"caching": "ReadWrite"
						},
						"imageReference": "[variables('imageReference')[parameters('ubuntuOSVersion')]]"
					},
					"osProfile": {
						"computerNamePrefix": "[parameters('vmDpName')]",
						"adminUsername": "[parameters('adminUsername')]",
						"adminPassword": "[parameters('adminPasswordOrKey')]",
						"linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
					},
          "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'), variables('securityProfileJson'), json('null'))]",
					"networkProfile": {
						"networkInterfaceConfigurations": [
							{
								"name": "[concat('nic', parameters('vmDpName'))]",
								"properties": {
									"primary": true,
									"ipConfigurations": [
										{
											"name": "[concat('ipconfigVmss', parameters('vmDpName'))]",
											"properties": {
												"subnet": {
													"id": "[variables('subnetRef')]"
												},
												"publicIPAddressConfiguration": {
													"name": "[variables('publicDpIpAddressName')]",
													"properties": {
														"idleTimeoutInMinutes": 10,
														"dnsSettings": {
															"domainNameLabel": "[parameters('dnsDpLabelPrefix')]"
														}
													}
												}
											}
										}
									]
								}
							}
						]
					}
				}
			}
		}
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "hostname": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2021-05-01').dnsSettings.fqdn]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[format('ssh {0}@{1}', parameters('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2021-05-01').dnsSettings.fqdn)]"
    }
  }
}